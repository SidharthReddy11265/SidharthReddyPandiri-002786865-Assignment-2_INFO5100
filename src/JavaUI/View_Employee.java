/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package JavaUI;
import JavaMainFrame.Assignment2;
import JavaMainFrame.Employee_Details;
import java.awt.Image;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author psidh
 */
public class View_Employee extends javax.swing.JPanel {

    /**
     * Creates new form View_Employee
     */
    Employee_Details Details;
    public View_Employee(Employee_Details Details) {
       this.Details = Details;
        initComponents();
        
        fillemployeedetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Employee_table = new javax.swing.JTable();
        View = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Employee_ID = new javax.swing.JLabel();
        EmployeeText = new javax.swing.JTextField();
        LastNameText = new javax.swing.JTextField();
        Mobile_Number = new javax.swing.JLabel();
        FirstNameText = new javax.swing.JTextField();
        AgeText = new javax.swing.JTextField();
        LevelText = new javax.swing.JTextField();
        GenderText = new javax.swing.JTextField();
        StartDateText = new javax.swing.JTextField();
        TitleText = new javax.swing.JTextField();
        TeamInfoText = new javax.swing.JTextField();
        EmailText = new javax.swing.JTextField();
        First_Name = new javax.swing.JLabel();
        MobileText = new javax.swing.JTextField();
        Last_Name = new javax.swing.JLabel();
        Employee_Age = new javax.swing.JLabel();
        Gender = new javax.swing.JLabel();
        Start_Date = new javax.swing.JLabel();
        Employee_Level = new javax.swing.JLabel();
        Team_Info = new javax.swing.JLabel();
        Position_Title = new javax.swing.JLabel();
        Email_ID1 = new javax.swing.JLabel();
        Photo = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        Search = new javax.swing.JButton();
        SearchText = new javax.swing.JTextField();
        ClearSearch = new javax.swing.JButton();
        PhotoLable = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View Employee Details");

        Employee_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "Employee ID", "Age", "Gender", "Start Date", "Level", "Team Info", "Position Title", "Mobile No.", "Email ID", "Path"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Employee_table);

        View.setText("View");
        View.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewActionPerformed(evt);
            }
        });

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Employee_ID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Employee_ID.setText("Employee ID");

        EmployeeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmployeeTextActionPerformed(evt);
            }
        });

        LastNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LastNameTextActionPerformed(evt);
            }
        });

        Mobile_Number.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Mobile_Number.setText("Mobile Number");

        AgeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgeTextActionPerformed(evt);
            }
        });

        EmailText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailTextActionPerformed(evt);
            }
        });

        First_Name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        First_Name.setText("First Name");

        Last_Name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Last_Name.setText("Last Name");

        Employee_Age.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Employee_Age.setText("Age");

        Gender.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Gender.setText("Gender");

        Start_Date.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Start_Date.setText("Start Date");

        Employee_Level.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Employee_Level.setText("Level");

        Team_Info.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Team_Info.setText("Team Info");
        Team_Info.setMaximumSize(new java.awt.Dimension(27, 16));
        Team_Info.setMinimumSize(new java.awt.Dimension(27, 16));

        Position_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Position_Title.setText("Position Title");

        Email_ID1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Email_ID1.setText("Email");

        Photo.setText("Update Photo");
        Photo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PhotoActionPerformed(evt);
            }
        });

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        ClearSearch.setText("Clear");
        ClearSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearSearchActionPerformed(evt);
            }
        });

        PhotoLable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1266, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Employee_Level, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Start_Date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Gender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Employee_Age, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(First_Name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Mobile_Number, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Position_Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Team_Info, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Employee_ID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Last_Name, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                            .addComponent(Email_ID1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(98, 98, 98)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(GenderText)
                            .addComponent(StartDateText)
                            .addComponent(LevelText)
                            .addComponent(TeamInfoText)
                            .addComponent(TitleText)
                            .addComponent(EmailText)
                            .addComponent(MobileText, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(AgeText)
                            .addComponent(EmployeeText, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(LastNameText)
                            .addComponent(FirstNameText, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE))
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SearchText, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(PhotoLable, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Photo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(View, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Delete, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                    .addComponent(ClearSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(View)
                    .addComponent(Delete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(FirstNameText)
                        .addComponent(SearchText)
                        .addComponent(Search)
                        .addComponent(ClearSearch))
                    .addComponent(First_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Last_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(EmployeeText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Employee_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Employee_Age, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AgeText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Gender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(GenderText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Start_Date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(StartDateText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Employee_Level, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LevelText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(PhotoLable, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Photo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Team_Info, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TeamInfoText, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TitleText)
                    .addComponent(Position_Title, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Mobile_Number, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MobileText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Email_ID1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EmailText, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(Update)
                .addGap(206, 206, 206))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewActionPerformed
        // TODO add your handling code here:
        int SelectedRow = Employee_table.getSelectedRow();
         if (SelectedRow<0){
                 JOptionPane.showMessageDialog(this,"Please Select a Row to View");
                 return;
         }
        DefaultTableModel model = (DefaultTableModel) Employee_table.getModel();
        Assignment2 Selected_Row = (Assignment2)model.getValueAt(SelectedRow,0);
        FirstNameText.setText(Selected_Row.getFirst_Name());
        LastNameText.setText(Selected_Row.getLast_Name());
        EmployeeText.setText(Selected_Row.getEmployee_ID());
        AgeText.setText(String.valueOf(Selected_Row.getAge()));
        GenderText.setText(Selected_Row.getGender());
        StartDateText.setText(Selected_Row.getStart_Date());
        LevelText.setText(String.valueOf(Selected_Row.getlevel()));
        TeamInfoText.setText(Selected_Row.getTeam_Info());
        TitleText.setText(Selected_Row.getPosition_Title());
        MobileText.setText(String.valueOf(Selected_Row.getMobile_Number()));
        EmailText.setText(Selected_Row.getEmail_ID());
        jTextField1.setText(String.valueOf(Selected_Row.getPhoto()));
         ImageIcon img = new ImageIcon(Selected_Row.getPhoto().toString());
         Image imgfit = img.getImage();
         Image imgscale = imgfit.getScaledInstance(146,146, Image.SCALE_SMOOTH);
         PhotoLable.setIcon(new ImageIcon(imgscale));
        
    }//GEN-LAST:event_ViewActionPerformed

    private void EmployeeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmployeeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmployeeTextActionPerformed

    private void LastNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LastNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LastNameTextActionPerformed

    private void AgeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AgeTextActionPerformed

    private void EmailTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailTextActionPerformed

    private void PhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PhotoActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:

        JFileChooser file = new JFileChooser();
//        File file_path = new File(file.getSelectedFile().getAbsolutePath());
        file.showOpenDialog(null);
        File file1= file.getSelectedFile();
        String path = file1.getAbsolutePath();
        jTextField1.setText(path);
         ImageIcon img = new ImageIcon(file1.toString());
         Image imgfit = img.getImage();
         Image imgscale = imgfit.getScaledInstance(146,146,Image.SCALE_SMOOTH);
         PhotoLable.setIcon(new ImageIcon(imgscale));
         JOptionPane.showMessageDialog(this,"Photo Has Been Updated Successfully");
    }//GEN-LAST:event_PhotoActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:
        int SelectedRow = Employee_table.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) Employee_table.getModel();
        Assignment2 Selected_Row = (Assignment2)model.getValueAt(SelectedRow,0);
       
         if (SelectedRow >= 0){
             model.setValueAt(FirstNameText.getText(),SelectedRow,0);   
             model.setValueAt(LastNameText.getText(),SelectedRow,1);
             model.setValueAt(EmployeeText.getText(),SelectedRow,2);
             model.setValueAt(AgeText.getText(),SelectedRow,3);
             model.setValueAt(GenderText.getText(),SelectedRow,4);
             model.setValueAt(StartDateText.getText(),SelectedRow,5);
             model.setValueAt(LevelText.getText(),SelectedRow,6);
             model.setValueAt(TeamInfoText.getText(),SelectedRow,7);
             model.setValueAt(TitleText.getText(),SelectedRow,8);
             model.setValueAt(MobileText.getText(),SelectedRow,9);
             model.setValueAt(EmailText.getText(),SelectedRow,10);
             model.setValueAt(jTextField1.getText(),SelectedRow,11);
             ImageIcon img = new ImageIcon(Selected_Row.getPhoto().toString());
         Image imgfit = img.getImage();
         Image imgscale = imgfit.getScaledInstance(146,146, Image.SCALE_SMOOTH);
         PhotoLable.setIcon(new ImageIcon(imgscale));
             JOptionPane.showMessageDialog(this,"Updated Successfully");
        Selected_Row.setFirst_Name(FirstNameText.getText());
        Selected_Row.setLast_Name(LastNameText.getText());
        Selected_Row.setEmployee_ID(EmployeeText.getText());
        Selected_Row.setAge(Integer.parseInt(AgeText.getText()));
        Selected_Row.setGender(GenderText.getText());
        Selected_Row.setStart_Date(StartDateText.getText());
        Selected_Row.setLevel(Integer.parseInt(LevelText.getText()));
        Selected_Row.setTeam_Info(TeamInfoText.getText());
        Selected_Row.setPosition_Title(TitleText.getText());
        Selected_Row.setMobile_Number(Integer.parseInt(MobileText.getText()));
        Selected_Row.setEmail_ID(EmailText.getText());
       Selected_Row.setPhoto(new File(jTextField1.getText()));
        
        FirstNameText.setText("");
        LastNameText.setText("");
        EmployeeText.setText("");
        AgeText.setText("");
        GenderText.setText("");
        StartDateText.setText("");
        LevelText.setText("");
        TeamInfoText.setText("");
        TitleText.setText("");
        MobileText.setText("");
        EmailText.setText("");
        PhotoLable.setIcon(null);
        jTextField1.setText("");
        fillemployeedetails();
         }else{
         JOptionPane.showMessageDialog(this,"Error, No update");
         FirstNameText.setText("");
        LastNameText.setText("");
        EmployeeText.setText("");
        AgeText.setText("");
        GenderText.setText("");
        StartDateText.setText("");
        LevelText.setText("");
        TeamInfoText.setText("");
        TitleText.setText("");
        MobileText.setText("");
        EmailText.setText("");
        Photo.setIcon(null);
        fillemployeedetails();
         }
        
    }//GEN-LAST:event_UpdateActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        
        int SelectedRow = Employee_table.getSelectedRow();
         if (SelectedRow<0){
                 JOptionPane.showMessageDialog(this,"Please Select a Row to Delete");
                 return;
         }
        DefaultTableModel model = (DefaultTableModel) Employee_table.getModel();
        Assignment2 Selected_Row = (Assignment2)model.getValueAt(SelectedRow,0);
        Details.Delete_Employee(Selected_Row);
        JOptionPane.showMessageDialog(this,"Employee Details Deleted Successfully");
        FirstNameText.setText("");
        LastNameText.setText("");
        EmployeeText.setText("");
        AgeText.setText("");
        GenderText.setText("");
        StartDateText.setText("");
        LevelText.setText("");
        TeamInfoText.setText("");
        TitleText.setText("");
        MobileText.setText("");
        EmailText.setText("");
        PhotoLable.setIcon(null);
        fillemployeedetails();
    }//GEN-LAST:event_DeleteActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
         String EmployeeDetails = SearchText.getText().toLowerCase();
         Search(EmployeeDetails);
    }//GEN-LAST:event_SearchActionPerformed

    private void ClearSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearSearchActionPerformed
        // TODO add your handling code here:
        SearchText.setText(null);
        String EmployeeDetails = SearchText.getText().toLowerCase();
        Search(EmployeeDetails);
    }//GEN-LAST:event_ClearSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AgeText;
    private javax.swing.JButton ClearSearch;
    private javax.swing.JButton Delete;
    private javax.swing.JTextField EmailText;
    private javax.swing.JLabel Email_ID1;
    private javax.swing.JTextField EmployeeText;
    private javax.swing.JLabel Employee_Age;
    private javax.swing.JLabel Employee_ID;
    private javax.swing.JLabel Employee_Level;
    private javax.swing.JTable Employee_table;
    private javax.swing.JTextField FirstNameText;
    private javax.swing.JLabel First_Name;
    private javax.swing.JLabel Gender;
    private javax.swing.JTextField GenderText;
    private javax.swing.JTextField LastNameText;
    private javax.swing.JLabel Last_Name;
    private javax.swing.JTextField LevelText;
    private javax.swing.JTextField MobileText;
    private javax.swing.JLabel Mobile_Number;
    private javax.swing.JButton Photo;
    private javax.swing.JLabel PhotoLable;
    private javax.swing.JLabel Position_Title;
    private javax.swing.JButton Search;
    private javax.swing.JTextField SearchText;
    private javax.swing.JTextField StartDateText;
    private javax.swing.JLabel Start_Date;
    private javax.swing.JTextField TeamInfoText;
    private javax.swing.JLabel Team_Info;
    private javax.swing.JTextField TitleText;
    private javax.swing.JButton Update;
    private javax.swing.JButton View;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void fillemployeedetails() {
         DefaultTableModel Table = (DefaultTableModel) Employee_table.getModel();
         Table.setRowCount(0);
         
         for (Assignment2 Employee : Details.getDetails()){
            Object[] row = new Object[12];
            row[0] = Employee;
            row[1] = Employee.getLast_Name();
            row[2] = Employee.getEmployee_ID();
            row[3] = Employee.getAge();
            row[4] = Employee.getGender();
            row[5] = Employee.getStart_Date();
            row[6] = Employee.getlevel();
            row[7] = Employee.getTeam_Info();
            row[8] = Employee.getPosition_Title();
            row[9] = Employee.getMobile_Number();
            row[10] = Employee.getEmail_ID();
            row[11] = Employee.getPhoto();
            Table.addRow(row);
         }
    }

    private void Search(String EmployeeDetails) {
              DefaultTableModel Table = (DefaultTableModel) Employee_table.getModel();
              TableRowSorter<DefaultTableModel> EmployeeSearch = new TableRowSorter<DefaultTableModel>(Table);
              Employee_table.setRowSorter(EmployeeSearch);
              EmployeeSearch.setRowFilter(RowFilter.regexFilter(EmployeeDetails));
              
    }
}
